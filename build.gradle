import org.apache.tools.ant.filters.ReplaceTokens

import java.nio.file.Files
import java.nio.file.Paths

apply plugin: 'java'
apply plugin: 'kotlin'

group = 'dev.uten2c'
version = '1.0.3'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.3-R0.1-SNAPSHOT'
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly "org.jetbrains.kotlin:kotlin-reflect:1.4.10"
    compileOnly fileTree(dir: 'lib', include: '*.jar')
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

buildscript {
    ext.kotlin_version = '1.4.10'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task genPatchedJar() {
    def patchedJarName = "patched_1.16.3.jar"
    def libDir = Paths.get(project.file("lib").path)
    if (!Files.exists(libDir)) {
        Files.createDirectory(libDir)
    }

    def patchedJarPath = Paths.get(project.file("lib/${patchedJarName}").path)
    if (Files.exists(patchedJarPath)) {
        return
    }

    def tmpDir = Files.createTempDirectory("patch")
    def jarName = "paper.jar"
    def jarPath = tmpDir.resolve(jarName)
    def url = new URL("https://papermc.io/api/v1/paper/1.16.3/latest/download")
    jarPath << url.openStream()
    def builder = new ProcessBuilder("java", "-jar", jarName, "nogui")
    builder.directory(tmpDir.toFile())
    def process = builder.start()
    process.waitFor()
    Files.move(tmpDir.resolve("cache/${patchedJarName}"), patchedJarPath)
}